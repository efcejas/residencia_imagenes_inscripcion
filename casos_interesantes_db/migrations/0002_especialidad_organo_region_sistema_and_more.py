# Generated by Django 5.0.4 on 2024-07-27 03:16

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('asistencia', '0012_alter_clasificaciontematica_seccion'),
        ('casos_interesantes_db', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especialidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Nombre de la especialidad')),
            ],
            options={
                'verbose_name': 'Especialidad',
                'verbose_name_plural': 'Especialidades',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Organo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Órgano')),
            ],
            options={
                'verbose_name': 'Órgano',
                'verbose_name_plural': 'Órganos',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Región de examen')),
            ],
            options={
                'verbose_name': 'Región anatómica',
                'verbose_name_plural': 'Regiones anatómicas',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Sistema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Sistema')),
            ],
            options={
                'verbose_name': 'Sistema',
                'verbose_name_plural': 'Sistemas',
                'ordering': ['nombre'],
            },
        ),
        migrations.AlterModelOptions(
            name='paciente',
            options={'ordering': ['apellido', 'nombre'], 'verbose_name': 'Paciente', 'verbose_name_plural': 'Pacientes'},
        ),
        migrations.CreateModel(
            name='CasoInteresante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_estudio', models.CharField(error_messages={'unique': 'El ID de estudio ingresado ya existe en la base de datos.'}, help_text='Cada estudio cuenta con un ID único que lo identifica y es asginado por cada equipo. Ingresando este ID se evitará duplicados.', max_length=50, unique=True, verbose_name='ID de estudio')),
                ('fecha', models.DateField(default=django.utils.timezone.now, help_text='Ingrese la fecha en la que se realizó el estudio.', verbose_name='Fecha del caso')),
                ('tipo_estudio', models.CharField(choices=[('RM', 'Resonancia magnética'), ('TC', 'Tomografía computada'), ('US', 'Ecografía'), ('RX', 'Radiografía')], help_text='Seleccione el tipo de estudio que se realizó.', max_length=2, verbose_name='Tipo de estudio')),
                ('contraste_ev', models.BooleanField(default=False, help_text='¿Se utilizó contraste endovenoso en el estudio?', verbose_name='Contraste')),
                ('contraste_or', models.BooleanField(default=False, help_text='¿Se utilizó contraste oral en el estudio?', verbose_name='Contraste oral')),
                ('descripcion', models.TextField(help_text='Ingrese una breve descripción del caso.', verbose_name='Descripción del caso')),
                ('fregmento_informe', models.TextField(help_text='Ingrese un fragmento del informe que menciona el hallazgo de interés o en el que se menciona el diagnóstico definitivo.', verbose_name='Fragmento del informe')),
                ('etiquetas', taggit.managers.TaggableManager(blank=True, help_text='Puede agregar etiquetas para facilitar la búsqueda de este caso.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Etiquetas')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='casos_interesantes_db.paciente')),
                ('sede', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='asistencia.sedes')),
                ('especialidad', models.ForeignKey(help_text='Selecciona a que subespecialidad pertenece el caso.', on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='casos_interesantes_db.especialidad')),
                ('organo', models.ForeignKey(help_text='Seleccione el órgano donde se encuentra la patología, si corresponde.', on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='casos_interesantes_db.organo')),
                ('region_anatomica', models.ForeignKey(help_text='Seleccione la región anatómica donde se encuentra la patología.', on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='casos_interesantes_db.region', verbose_name='Región anatómica')),
                ('sistema', models.ForeignKey(help_text='Seleccione el sistema relacionado con la patología.', on_delete=django.db.models.deletion.CASCADE, related_name='casos_interesantes', to='casos_interesantes_db.sistema')),
            ],
            options={
                'verbose_name': 'Caso interesante',
                'verbose_name_plural': 'Casos interesantes',
                'ordering': ['-fecha'],
            },
        ),
    ]
